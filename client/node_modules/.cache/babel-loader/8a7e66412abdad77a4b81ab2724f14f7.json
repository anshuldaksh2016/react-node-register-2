{"ast":null,"code":"var _jsxFileName = \"E:\\\\React stuff\\\\demo1_back\\\\client\\\\src\\\\Registerform.js\";\nimport React from 'react'; // import Recaptcha from 'react-recaptcha';\n\nimport './RegisterForm.css';\nimport axios from 'axios';\nimport { loadReCaptcha } from 'react-recaptcha-google';\nimport { ReCaptcha } from 'react-recaptcha-google';\n\nclass Registerform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      var data = {\n        email: this.state.email\n      };\n      fetch('http://localhost:5000/register', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(info => {\n        console.log(info);\n      });\n    };\n\n    this.state = {\n      email: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // componentDidMount() {\n  //     const script = document.getElementsByClassName(\"g-recaptcha\")\n  //     script.src = \"https://www.google.com/recaptcha/api.js\";\n  //     script.async = true;\n  //     document.body.appendChild(script);\n  // }\n\n\n  // handle the state changed \n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value // grab the state property\n\n    });\n  }\n\n  componentDidMount() {\n    loadReCaptcha();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"/register\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Email : \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReCaptcha, {\n      ref: el => {\n        this.captchaDemo = el;\n      },\n      size: \"normal\",\n      \"data-theme\": \"dark\",\n      render: \"explicit\",\n      sitekey: \"6LeM5rwZAAAAAN_oBVB8O5T2TpEArvf-nR-1PSpS\",\n      onloadCallback: this.onLoadRecaptcha,\n      verifyCallback: this.verifyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"btn\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Registerform;","map":{"version":3,"sources":["E:/React stuff/demo1_back/client/src/Registerform.js"],"names":["React","axios","loadReCaptcha","ReCaptcha","Registerform","Component","constructor","props","handleSubmit","e","preventDefault","console","log","state","data","email","fetch","method","body","JSON","stringify","headers","then","response","json","info","bind","handleChange","event","setState","target","id","value","componentDidMount","render","el","captchaDemo","onLoadRecaptcha","verifyCallback"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import Recaptcha from 'react-recaptcha';\r\nimport './RegisterForm.css';\r\nimport axios from 'axios';\r\nimport { loadReCaptcha } from 'react-recaptcha-google';\r\nimport { ReCaptcha } from 'react-recaptcha-google';\r\n\r\n\r\nclass Registerform extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n        };\r\n\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    // componentDidMount() {\r\n    //     const script = document.getElementsByClassName(\"g-recaptcha\")\r\n\r\n    //     script.src = \"https://www.google.com/recaptcha/api.js\";\r\n    //     script.async = true;\r\n\r\n    //     document.body.appendChild(script);\r\n    // }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        var data = { email: this.state.email };\r\n\r\n        \r\n        fetch('http://localhost:5000/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n        .then(response => response.json())\r\n        .then((info) => { console.log(info) })\r\n    }\r\n    \r\n\r\n    \r\n    // handle the state changed \r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n            // grab the state property\r\n        })\r\n\r\n    }\r\n    componentDidMount() {\r\n        loadReCaptcha();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-div\">\r\n                <form method=\"post\" action=\"/register\" onSubmit={this.handleSubmit}>\r\n                    Email : <br />\r\n                    <input type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n\r\n                    <div>\r\n                        <ReCaptcha\r\n                            ref={(el) => { this.captchaDemo = el; }}\r\n                            size=\"normal\"\r\n                            data-theme=\"dark\"\r\n                            render=\"explicit\"\r\n                            sitekey=\"6LeM5rwZAAAAAN_oBVB8O5T2TpEArvf-nR-1PSpS\"\r\n                            onloadCallback={this.onLoadRecaptcha}\r\n                            verifyCallback={this.verifyCallback}\r\n                        />\r\n                    </div>\r\n                    <br />\r\n                    <input type=\"submit\" id=\"btn\" value=\"Register\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Registerform;"]},"metadata":{},"sourceType":"module"}