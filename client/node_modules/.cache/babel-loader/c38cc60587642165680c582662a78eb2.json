{"ast":null,"code":"var _jsxFileName = \"E:\\\\React stuff\\\\demo1\\\\src\\\\Form.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: {},\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let input = this.state.input;\n    input[event.target.name] = event.target.value;\n    this.setState({\n      input\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validate()) {\n      console.log(this.state);\n      let input = {};\n      input[\"email\"] = \"\";\n      this.setState({\n        input: input\n      });\n    }\n  }\n\n  validate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n\n    if (!input[\"email\"]) {\n      isValid = false;\n      errors[\"email\"] = \"Please Enter your email\";\n    }\n\n    if (typeof input[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(/^([a-zA-Z0-9\\.-]+)@([a-zA-Z0-9-]+).([a-z]{2,20})$/);\n\n      if (!pattern.test(input[\"email\"])) {\n        isValid = false;\n        errors[\"email\"] = \"Please enter valid email address.\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return isValid;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Email :\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Your Email\",\n      value: this.state.input.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.state.errors.email), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Captcha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/React stuff/demo1/src/Form.js"],"names":["React","render","Form","Component","constructor","state","input","errors","handleChange","bind","handleSubmit","event","target","name","value","setState","preventDefault","validate","console","log","isValid","pattern","RegExp","test","display","justifyContent","alignItems","height","email"],"mappings":"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","sourcesContent":["\r\n\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            input: {},\r\n            errors:{}\r\n        };\r\n\r\n        this.handleChange= this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let input = this.state.input;\r\n        input[event.target.name] = event.target.value;\r\n    \r\n    this.setState({\r\n        input\r\n    });\r\n}\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        if(this.validate())\r\n        {\r\n            console.log(this.state);\r\n            \r\n            let input = {};\r\n            input[\"email\"] = \"\";\r\n            this.setState({input:input});\r\n\r\n        }\r\n    }\r\n\r\n    validate(){\r\n        let input = this.state.input;\r\n        let errors = {};\r\n        let isValid = true;\r\n\r\n        if(!input[\"email\"])\r\n        {\r\n            isValid = false;\r\n            errors[\"email\"] = \"Please Enter your email\";\r\n        }\r\n\r\n    if (typeof input[\"email\"] !== \"undefined\") {\r\n\r\n\r\n\r\n        var pattern = new RegExp(/^([a-zA-Z0-9\\.-]+)@([a-zA-Z0-9-]+).([a-z]{2,20})$/);\r\n\r\n        if (!pattern.test(input[\"email\"])) {\r\n\r\n            isValid = false;\r\n\r\n            errors[\"email\"] = \"Please enter valid email address.\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n        errors: errors\r\n\r\n    });\r\n    return isValid;\r\n       \r\n    }\r\n        \r\n       \r\n    render() {\r\n    return(\r\n            \r\n            <div \r\n            className=\"form\" \r\n            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                <label for=\"email\">\r\n                Email :\r\n                <input type=\"text\"\r\n                placeholder=\"Enter Your Email\"\r\n                value={this.state.input.email}\r\n                onChange={this.handleChange}\r\n                 />\r\n                </label>\r\n\r\n                <div className=\"text-danger\">{this.state.errors.email}</div>\r\n\r\n                \r\n                <div className=\"Captcha\">\r\n                    \r\n                </div>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}